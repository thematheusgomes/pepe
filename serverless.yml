service: ${opt:stage,'dev'}-chat-bot

plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-plugin-resource-tagging

package:
  patterns:
    - '!./**'
    - 'src/**'

custom:
  pythonRequirements:
    dockerizePip: non-linux

useDotenv: true
variablesResolutionMode: 20210326

provider:
  name: aws
  region: us-east-1
  stackName: ${opt:stage,'dev'}-pepe-bot
  stackTags:
    Environment: ${opt:stage,'dev'}
  apiGateway:
    shouldStartNameWithService: true
  lambdaHashingVersion: 20201221
  iam:
    role:
      name: ${opt:stage,'dev'}-pepe-bot
      statements:
        - Effect: 'Allow'
          Action:
            - 'ec2:RevokeSecurityGroupIngress'
            - 'ec2:AuthorizeSecurityGroupIngress'
          Resource:
            - 'arn:aws:ec2:us-east-1:212568053769:security-group/${ssm:/dev/aws/ec2/bastion/security_group_id, env:DEV_SGID}'
            - 'arn:aws:ec2:us-east-1:212568053769:security-group/${ssm:/qa/aws/ec2/bastion/security_group_id, env:QA_SGID}'
            - 'arn:aws:ec2:us-east-1:212568053769:security-group/${ssm:/prod/aws/ec2/bastion/security_group_id, env:PROD_SGID}'
            - 'arn:aws:ec2:us-east-1:212568053769:security-group/${ssm:/tools/aws/ec2/bastion/security_group_id, env:TOOLS_SGID}'
        - Effect: 'Allow'
          Action:
            - 'ec2:DescribeSecurityGroups'
          Resource:
            - '*'
        - Effect: 'Allow'
          Action:
            - 'waf:GetChangeToken'
            - 'waf:UpdateIPSet'
            - 'waf:GetIPSet'
            - 'waf-regional:GetChangeToken'
            - 'waf-regional:UpdateIPSet'
            - 'waf-regional:GetIPSet'
          Resource:
            - 'arn:aws:waf::212568053769:changetoken/*'
            - 'arn:aws:waf::212568053769:ipset/${ssm:/all/aws/waf/ipset/global_dynamic_ips, env:GLOBAL_IPSET_DYNAMIC}'
            - 'arn:aws:waf::212568053769:ipset/${ssm:/all/aws/waf/ipset/global_fixed_ips, env:GLOBAL_IPSET_FIXED}'
            - 'arn:aws:waf-regional:us-east-1:212568053769:changetoken/*'
            - 'arn:aws:waf-regional:us-east-1:212568053769:ipset/${ssm:/all/aws/waf/ipset/regional_dynamic_ips, env:REGIONAL_IPSET_DYNAMIC}'
            - 'arn:aws:waf-regional:us-east-1:212568053769:ipset/${ssm:/all/aws/waf/ipset/regional_fixed_ips, env:REGIONAL_IPSET_FIXED}'
        - Effect: 'Allow'
          Action:
            - 'lambda:InvokeFunction'
          Resource:
            - 'arn:aws:lambda:us-east-1:212568053769:function:tools-turn-on-off'

functions:
  pepe:
    handler: src/app.handler
    name: ${opt:stage,'dev'}-pepe-bot
    description: Bot that assists interactions with AWS resources
    runtime: python3.9
    memorySize: 128
    timeout: 30
    environment:
      AUDIENCE: ${ssm:/tools/chatbot/lambda/pepe/google_audience, env:AUDIENCE}
      PEPE_WEBHOOK: ${ssm:/tools/chatbot/lambda/pepe/webhook, env:PEPE_WEBHOOK}
      USER_PERMISSIONS: ${ssm:/tools/chatbot/lambda/pepe/user_permissions, env:USER_PERMISSIONS}
      DEV_SGID: ${ssm:/dev/aws/ec2/bastion/security_group_id, env:DEV_SGID}
      QA_SGID: ${ssm:/qa/aws/ec2/bastion/security_group_id, env:QA_SGID}
      PROD_SGID: ${ssm:/prod/aws/ec2/bastion/security_group_id, env:PROD_SGID}
      TOOLS_SGID: ${ssm:/tools/aws/ec2/bastion/security_group_id, env:TOOLS_SGID}
      GLOBAL_IPSET_DYNAMIC: ${ssm:/all/aws/waf/ipset/global_dynamic_ips, env:GLOBAL_IPSET_DYNAMIC}
      GLOBAL_IPSET_FIXED: ${ssm:/all/aws/waf/ipset/global_fixed_ips, env:GLOBAL_IPSET_FIXED}
      REGIONAL_IPSET_DYNAMIC: ${ssm:/all/aws/waf/ipset/regional_dynamic_ips, env:REGIONAL_IPSET_DYNAMIC}
      REGIONAL_IPSET_FIXED: ${ssm:/all/aws/waf/ipset/regional_fixed_ips, env:REGIONAL_IPSET_FIXED}
    events:
      - http:
          method: POST
          path: googlechat
      - schedule:
          name: ${opt:stage,'dev'}-clear-dynamic-ipset
          description: Remove all dynamic ips from Waf ipset
          rate: cron(0 9 1,15 * ? *)
          input:
            resource: 'cloudwatch events'
            user:
              displayName: 'DevOps'
              email: 'test@email.com'
            message:
              argumentText: 'clean'
              annotations:
                - slashCommand:
                    commandName: '/iprelease'
              slashCommand:
                commandId: '1'
